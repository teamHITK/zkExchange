import { SnarkProverArtifacts, FullProof } from "./types";
import { MerkleSumTree } from "@0xagnish/zk-data-prep";
/**
 * @notice Prover is a class that contains the core methods that can provide credible Proof of Solvency to it's users as
 * well as external auditing parties, without disclosing any further business information
 */
export default class Prover {
    private readonly _tree;
    private readonly _assetsSum;
    private readonly _proverArtifacts;
    /**
     * @notice initialises the prover class
     * @param tree the Merkle Sum Tree generated by the prover
     * @param assetsSum The total assets owned by the company
     * @param proverArtifacts the zkSNARK components provided by the prover
     */
    constructor(tree: MerkleSumTree, assetsSum: bigint, proverArtifacts: SnarkProverArtifacts);
    get tree(): MerkleSumTree;
    get assetsSum(): bigint;
    /**
     * @notice generates proof of solvency for a particular user
     * @param userIndex the index of the user in the csv file
     * @returns proof of solvency file
     */
    generateProofForUser(userIndex: number): Promise<FullProof>;
}
